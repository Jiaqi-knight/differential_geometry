# Autogenerated with SMOP 
from smop.core import *
# 

    
@function
def computereciprocalmetriccoefficients3D(contravariantbase=None,*args,**kwargs):
    varargin = computereciprocalmetriccoefficients3D.varargin
    nargin = computereciprocalmetriccoefficients3D.nargin

    ##
#        Project: Fluid - structure interaction on deformable surfaces
#         Author: Luca Di Stasio
#    Institution: ETH Zrich
#                 Institute for Building Materials
# Research group: Computational Physics for Engineering Materials
#        Version: 0.1
#  Creation date: May 28th, 2014
#    Last update: July 8th, 2014
    
    #    Description: 
#          Input: 
#         Output:
    
    ##
    
    g11=sum(multiply(contravariantbase[:,1:3],contravariantbase[:,1:3]),2)
    g22=sum(multiply(contravariantbase[:,4:6],contravariantbase[:,4:6]),2)
    g33=sum(multiply(contravariantbase[:,7:9],contravariantbase[:,7:9]),2)
    g12=sum(multiply(contravariantbase[:,1:3],contravariantbase[:,4:6]),2)
    g13=sum(multiply(contravariantbase[:,1:3],contravariantbase[:,7:9]),2)
    g23=sum(multiply(contravariantbase[:,4:6],contravariantbase[:,7:9]),2)
    g=multiply(g11,(multiply(g22,g33) - g23 ** 2)) + multiply(g12,(multiply(g13,g23) - multiply(g12,g33))) + multiply(g13,(multiply(g12,g23) - multiply(g13,g22)))
    sqrtg=sqrt(g)
    reciprocalmetriccoefficients=matlabarray(cat(g11,g22,g33,g12,g13,g23))
    return reciprocalmetriccoefficients,g,sqrtg